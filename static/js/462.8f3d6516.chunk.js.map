{"version":3,"file":"static/js/462.8f3d6516.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsForm/ContactsForm.styles.jsx","redux/filter/filterSelectors.js","components/Filter/Filter.jsx","components/ContactsList/ContactsListItem/ContactsListItem.styles.jsx","components/ContactsList/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.styles.jsx","components/ContactsList/ContactsList.jsx","components/ContactsForm/ContactsForm.jsx","components/App.styles.jsx","components/pages/ContactsPage/ContactsPage.styles.jsx","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = ({ contacts: { items } }) => items;\nexport const selectIsLoading = ({ contacts: { isLoading } }) => isLoading;\nexport const selectError = ({ contacts: { err } }) => err;\n\nexport const selectVisibleContacts = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  width: 500px;\n  margin: 0 auto;\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nconst SubButton = styled.button`\n  width: 502px;\n  padding: 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 0.875em;\n  color: #75706c;\n  background: transparent;\n\n  outline: none;\n  cursor: pointer;\n\n  border: solid 1px #b3aca7;\n\n  transition: all 0.3s ease-in-out;\n  -webkit-transition: all 0.3s ease-in-out;\n  -moz-transition: all 0.3s ease-in-out;\n  -ms-transition: all 0.3s ease-in-out;\n\n  :hover {\n    background: #b3aca7;\n    color: #e2dedb;\n  }\n`;\n\nconst Input = styled.input`\n  font-family: 'Lato', sans-serif;\n  font-size: 0.875em;\n  width: 470px;\n  height: 50px;\n  padding: 0px 15px 0px 15px;\n\n  background: transparent;\n  outline: none;\n  color: #726659;\n\n  border: solid 1px #b3aca7;\n\n  transition: all 0.3s ease-in-out;\n  -webkit-transition: all 0.3s ease-in-out;\n  -moz-transition: all 0.3s ease-in-out;\n  -ms-transition: all 0.3s ease-in-out;\n\n  :hover {\n    background: #b3aca7;\n    color: #e2dedb;\n  }\n`;\n\nexport { Form, SubButton, Input };\n","export const selectFilter = ({ filter }) => filter;\n","import { Form, Input } from 'components/ContactsForm/ContactsForm.styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <Form>\n      <label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilter}\n        />\n      </label>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nconst ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nconst DelButton = styled.button`\n  padding: 2px;\n  width: 90px;\n  font-family: 'Lato', sans-serif;\n  font-size: 0.875em;\n  color: #75706c;\n  background: transparent;\n\n  outline: none;\n  cursor: pointer;\n\n  border: solid 1px #b3aca7;\n\n  transition: all 0.3s ease-in-out;\n  -webkit-transition: all 0.3s ease-in-out;\n  -moz-transition: all 0.3s ease-in-out;\n  -ms-transition: all 0.3s ease-in-out;\n\n  :hover {\n    background: #b3aca7;\n    color: #e2dedb;\n  }\n`;\nexport { ListItem, DelButton };\n","import PropTypes from 'prop-types';\nimport { DelButton, ListItem } from './ContactsListItem.styles';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactsListItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      {name}: {number}\n      <DelButton onClick={() => dispatch(deleteContact(id))}>Delete</DelButton>\n    </ListItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  text-align: center;\n  width: 482px;\n  margin: 20px auto 100px;\n  border: solid 1px #b3aca7;\n  padding: 20px 10px;\n`;\n\nexport { List };\n","import { ContactsListItem } from './ContactsListItem/ContactsListItem';\nimport { List } from './ContactsList.styles';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const contactsList = useSelector(selectVisibleContacts);\n\n  if (!contactsList.length) return;\n  return (\n    <List>\n      {contactsList.map(contact => (\n        <ContactsListItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import { useState } from 'react';\nimport { Form, Input, SubButton } from './ContactsForm.styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name: name,\n      number: number,\n    };\n    const isInContacts = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase() ||\n        contact.number === newContact.number\n    );\n    if (isInContacts) {\n      toast.error(\n        `${newContact.name} or ${newContact.number} has already existed`\n      );\n      return;\n    }\n    dispatch(addContact(newContact));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <SubButton type=\"submit\">Add contact</SubButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nconst Title = styled.h2`\n  font-family: 'Lato', sans-serif;\n  margin: 0 auto;\n  margin: 10px 0;\n  font-size: 2.3em;\n  text-align: center;\n  letter-spacing: 7px;\n  text-transform: uppercase;\n  font-weight: 500;\n`;\n\nconst Notification = styled.p`\n  margin-top: 50px;\n  text-align: center;\n  font-family: 'Lato', sans-serif;\n  letter-spacing: 7px;\n  text-transform: uppercase;\n`;\n\nexport { Title, Notification };\n","import styled from 'styled-components';\n\nconst Title = styled.h2`\n  font-family: 'Lato', sans-serif;\n  margin: 0 auto;\n  margin: 10px 0;\n  font-size: 2.3em;\n  text-align: center;\n  letter-spacing: 7px;\n  text-transform: uppercase;\n  font-weight: 500;\n`;\n\nconst Notification = styled.p`\n  margin-top: 50px;\n  text-align: center;\n  font-family: 'Lato', sans-serif;\n  letter-spacing: 7px;\n  text-transform: uppercase;\n`;\n\nexport { Title, Notification };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Loader from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { Title } from 'components/App.styles';\nimport { Notification } from './ContactsPage.styles';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <ContactsForm />\n      {isLoading && <Loader />}\n      <Title>Contacts</Title>\n      {error && toast.error('Oops...Something went wrong')}\n      {contacts.length !== 0 && <Filter />}\n      <ContactsList />\n      {contacts.length === 0 && (\n        <Notification>Contact list is empty =(</Notification>\n      )}\n    </>\n  );\n}\n"],"names":["selectContacts","contacts","items","selectIsLoading","isLoading","selectError","err","selectVisibleContacts","filter","contact","name","toLowerCase","includes","Form","styled","SubButton","Input","selectFilter","Filter","useSelector","dispatch","useDispatch","type","value","onChange","e","setFilter","target","ListItem","DelButton","ContactsListItem","number","id","onClick","deleteContact","List","ContactsList","contactsList","length","map","ContactsForm","useState","setName","setNumber","handleChange","onSubmit","preventDefault","newContact","find","toast","addContact","pattern","title","required","Title","Notification","ContactsPage","error","useEffect","fetchContacts","Loader"],"sourceRoot":""}